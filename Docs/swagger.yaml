openapi: 3.0.2
info:
    title: MotivatsiooniApi
    version: 1.0.0
paths:
    /users:
        get:
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of users:
                                    value:
                                        - Pia
                                        - Aigi
                    description: Returns a list of users
            summary: get list of all users from api
            description: Returns a list of all users in the api.
        post:
            requestBody:
                description: User data
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                        examples:
                            Example of a user:
                                value:
                                    ID: 3
                                    MotivationID: 4
                                    Date: 24.11.2024
                                    UserName: Aigi
                                    Password: Qwerty1
                required: true
            tags:
                - users
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Added user:
                                    value:
                                        ID: 3
                                        MotivationID: 4
                                        Date: 24.11.2024
                                        UserName: Aigi
                                        Password: Qwerty1
                    description: 'Return code 201, if creation of new user was successful'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value: 'error: "One or multiple parameters are missing"'
                    description: 'Return status 400 to the user, if one or multiple of parameters are missing'
            summary: Add new user
            description: Adds a new user into the list.
    /ownerships:
        get:
            tags:
                - ownerships
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of ownerships:
                                    value:
                                        - 1
                                        - 2
                    description: Returns a list of ownerships
            summary: get list of all ownerships from api
            description: Returns a list of all ownerships in the api.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Ownership'
                        examples:
                            Example of a ownership:
                                value:
                                    UserID: 2
                                    MotivationID: 4
                required: true
            tags:
                - ownerships
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Ownership that is added:
                                    value:
                                        UserID: 2
                                        MotivationID: 4
                    description: 'Return code 201 to the user, if creation of new ownership was successful'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value: 'error: "One or multiple parameters are missing"'
                    description: 'Return status 400 to the user, if one or multiple of parameters are missing'
            summary: add new ownership
            description: Adds a new ownership into the array
    '/users/{id}':
        get:
            tags:
                - users
            parameters:
                -
                    examples:
                        Example of id of a user.:
                            value: '1'
                    name: id
                    description: Id of a user.
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of a user with details:
                                    value:
                                        ID: 2
                                        MotivationID: 1
                                        Date: 02.12.2024
                                        UserName: Aigi
                                        Password: Aigi123
                    description: Returns details of a user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Invalid user id:
                                    value: 'error: "Invalid id inserted"'
                    description: Return status code 400 to the user if an invalid id was entered
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                User/w+ was not found:
                                    value: 'error: "User\\w+ was not found in user array."'
                    description: Return error 404 to the user if user with id is not found
            summary: Get full details of a user.
            description: Returns full details of a given user.
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                        examples:
                            Example of a user:
                                value:
                                    ID: 2
                                    MotivationID: 1
                                    Date: 02.12.2024
                                    UserName: Aigi
                                    Password: Aigi123
                required: true
            tags:
                - users
            parameters:
                -
                    examples:
                        Example of id of a user.:
                            value: '1'
                    name: id
                    description: id of user to be updated
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                ' Example of a modified user':
                                    value:
                                        ID: 2
                                        MotivationID: 1
                                        Date: 02.12.2024
                                        UserName: Aigi
                                        Password: Aigi321
                    description: Returns the modified user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value: 'error: "One or multiple parameters are missing"'
                    description: User has not added required parameters to the modified user
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing user:
                                    value: 'error: "User not found"'
                    description: The user to be updated is not found in the array
            summary: Update a user
            description: 'Returns updated user, when modification of a user is successful'
        delete:
            tags:
                - users
            parameters:
                -
                    examples:
                        Example of the users id:
                            value: '1'
                    name: id
                    description: Id of a requested user
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                successful error:
                                    value:
                                        error: no connect
                    description: Return status 204 upon successful deletion of an user
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing user:
                                    value: 'error: "User not found"'
                    description: Return error 404 if the user with id is not found
            summary: Delete a specific user
            description: Deletes a user from the array based on given id
    '/ownerships/{id}':
        get:
            tags:
                - ownerships
            parameters:
                -
                    examples:
                        Example of id of a ownership:
                            value: '1'
                    name: id
                    description: Id of a ownership the user has requested.
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of a ownership with details:
                                    value:
                                        UserID: 2
                                        MotivationID: 4
                    description: Returns details of a ownership to the user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Invalid ownership id:
                                    value: 'error: "Invalid id inserted"'
                    description: Return status code 400 to the user if an invalid id was entered
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Quote/w+ was not found:
                                    value: 'error: "Ownership\\w+ was not found in ownership array."'
                    description: Return error 404 to the user if ownership with id is not found
            summary: Get full details of a ownership
            description: Returns full details of a given ownership
        delete:
            tags:
                - ownerships
            parameters:
                -
                    examples:
                        Example of id of an ownership:
                            value: '1'
                    name: id
                    description: Id of an ownership the user has requested
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                successful error:
                                    value:
                                        error: no content
                    description: 'Return status code 204 to the user, upon successful deletion of an owneship'
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing ownership:
                                    value: 'error: "Ownership not found"'
                    description: Return error 404 to the user if ownership with id is not found
            summary: Delete an ownership
            description: Deletes an ownership from the array based on given id
    /motivations:
        get:
            tags:
                - motivations
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of motivations:
                                    value:
                                        - esimene tsitaat
                                        - teine tsitaat
                    description: Returns a list of motivations
            summary: get list of all motivations from api
            description: Returns a list of all motivations in the api.
        post:
            requestBody:
                description: Data of motivation that the user wants to add
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Motivation'
                        examples:
                            Example of a motivation:
                                value:
                                    Quote: kolmas tsitaat
                                    Date: 24.11.2024
                                    UserID: 1
                                    Likes: 0
                required: true
            tags:
                - motivations
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Motivation that is added:
                                    value:
                                        ID: 3
                                        Quote: kolmas tsitaat
                                        Date: 24.11.2024
                                        UserID: 1
                                        Likes: 0
                    description: 'Return code 201 to the user, if creation of new motivation was successful'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value: 'error: "One or multiple parameters are missing"'
                    description: 'Return status 400 to the user, if one or multiple of parameters are missing'
            summary: Add new motivation
            description: Adds a new motivation into the array
    '/motivations/{id}':
        description: ''
        get:
            tags:
                - motivations
            parameters:
                -
                    examples:
                        Example an id of a motivation:
                            value: '1'
                    name: id
                    description: Id of a motivation the user has requested.
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of a motivation with details:
                                    value:
                                        ID: 2
                                        Quote: teine tsitaat
                                        Date: 25.11.2024
                                        UserID: 1
                                        Likes: 9
                    description: Returns details of a motivation to the user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Invalid motivation id:
                                    value: 'error: "Invalid id inserted"'
                    description: Return status code 400 to the user if an invalid id was entered
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Motivation was not found:
                                    value: 'error: "Motivation was not found in motivation array."'
                    description: Return error 404 to the user if motivation with id is not found
            summary: Get full details of a motivation
            description: Returns full details of a given motivation
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Motivation'
                        examples:
                            Example of a motivation:
                                value: '1'
                required: true
            tags:
                - motivations
            parameters:
                -
                    examples:
                        id of motivation:
                            value: '1'
                    name: id
                    description: id of motivation to be updated
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of a modified motivation:
                                    value:
                                        ID: 2
                                        Quote: teine tsitaat
                                        Date: 25.11.2024
                                        UserID: 1
                                        Likes: 9
                    description: Returns the modified motivation to the user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value: 'error: "One or multiple parameters are missing"'
                    description: User has not added required parameters to the modified motivation
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing motivation:
                                    value: 'error: "Motivation not found"'
                    description: The motivation to be updated is not found in the array
            summary: Update a motivation
            description: 'Returns updated motivation, when modification of a motivation is successful'
        delete:
            tags:
                - motivations
            parameters:
                -
                    examples:
                        Example of id of a motivation:
                            value: '1'
                    name: id
                    description: Id of a motivation the user has requested
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                successful error:
                                    value:
                                        error: no content
                    description: 'Return status code 204 to the user, upon successful deletion of a motivation'
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing motivation:
                                    value: 'error: "Motivation not found"'
                    description: Return error 404 to the user if motivation with id is not found
            summary: Delete a specific motivation
            description: Deletes a motivation from the array based on given id
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message.
        User:
            description: Example of a valid user
            type: object
            example:
                ID: 3
                MotivationID: 4
                Date: 24.11.2024
                UserName: Aigi
                Password: Qwerty1
        Ownership:
            description: Example of a valid ownership
            type: object
            example:
                UserID: 2
                MotivationID: 4
        Motivation:
            title: Root Type for Quote
            description: Example of a valid quote
            type: object
            properties:
                Quote:
                    type: string
                Date:
                    type: string
                UserID:
                    type: string
                Likes:
                    type: string
            example:
                Quote: kolmas tsitaat
                Date: 24.11.2024
                UserID: '1'
                Likes: '0'